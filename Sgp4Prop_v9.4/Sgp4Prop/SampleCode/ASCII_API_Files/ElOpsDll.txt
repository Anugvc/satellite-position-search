  1. ElOpsInit
Purpose:
	 Notes: This function has been deprecated since v9.0. 
	 Initializes ElOps dll for use in the program
Syntax: 
	int ElOpsInit((in-Long) apAddr)
Parameters: 
	apAddr: The handle that was returned from DllMainInit()
Return Value:
	0 if the ElOps dll is initialized successfully, non-0 if there is an error
=======================================================================================
  2. ElOpsGetInfo
Purpose:
	 Returns information about the current version of ElOps.dll. The information is placed in the string parameter you pass in
Syntax: 
	void ElOpsGetInfo((out-Character[128]) infoStr)
Parameters: 
	infoStr: A string to hold the information about ElOps.dll
=======================================================================================
  3. IsGeoOrbit
Purpose:
	 Checks to see if satellite has geo orbit
Syntax: 
	int IsGeoOrbit((in-Double) incli, (in-Double) period)
Parameters: 
	incli: Satellite's inclination (deg)
	period: Satellite's period (min)
Return Value:
	Return 1 if satellite has geo orbit, 0 if it doesn't
=======================================================================================
  4. CompLonEastSubPt
Purpose:
	 Estimates the approx long east subpt
Syntax: 
	double CompLonEastSubPt((in-Double) ds50UTC, (in-Double) node, (in-Double) omega, (in-Double) mnAnomaly)
Parameters: 
	ds50UTC: Time in days since 1950, UTC
	node: Right ascension of the ascending node (deg)
	omega: Argument of perigee (deg)
	mnAnomaly: Mean anomaly (deg)
Return Value:
	estimated long east sub point (deg)
=======================================================================================
  5. FindSatDecayTime
Purpose:
	 Computes the decay time of the input satellite
Syntax: 
	int FindSatDecayTime((in-Long) satKey, (in-Double) f10Avg, (out-Double) decayDs50UTC)
Parameters: 
	satKey: The input satKey of the satellite needs to compute decay time
	f10Avg: Input F10 average value
	decayDs50UTC: The output decay time in days since 1950 UTC
Return Value:
	Returns 0 if success, 1 if nDot/2 lt 0, 2 if mean motion lt 1.5, and 3 if f2log lt 0
=======================================================================================
  6. GetSatParameters
Purpose:
	 Returs parameters of a satellite via its satKey
Syntax: 
	int GetSatParameters((in-Long) satKey, (out-Double[32]) xa_satparm)
Parameters: 
	satKey: The input satKey of the satellite needs to compute gobs parameters
	xa_satparm: Output satellite's parameters.  see XA_SATPARM_?
Return Value:
	0 if the satellite parameters are successfully retrieved, non-0 if there is an error
=======================================================================================
  7. SatNumOf
Purpose:
	 Returs the satellite number associated with the input satKey
Syntax: 
	int SatNumOf((in-Long) satKey)
Parameters: 
	satKey: The input satKey
Return Value:
	The satellite number associated with the input satKey (satNum = -1 if satKey doesn't exist)
=======================================================================================
  8. AddManeuverVPStr
Purpose:
	 Adds an impulsive maneuver (using VP-card string format) to the specified elset (VCM, SpVec, or Tle type 6) represented by its satKey
	 Note: All maneuvers have to be entered before the satellite's initialization step
Syntax: 
	int AddManeuverVPStr((in-Long) satKey, (in-Character[512]) vpString)
Parameters: 
	satKey: The unique key of the satellite of which impulsive maneuver is added to
	vpString: Impulse manuever using VP-card string format
Return Value:
	0 if the impulsive maneuver is added successfully, non-0 if there is an error.
=======================================================================================
  9. AddManeuverVPArr
Purpose:
	 Adds an impulsive maneuver (using VP-card array format) to the specified elset (VCM, SpVec, or Tle type 6) represented by its satKey
	 Note: All maneuvers have to be entered before the satellite's initialization step
Syntax: 
	int AddManeuverVPArr((in-Long) satKey, (in-Double[16]) xa_vp)
Parameters: 
	satKey: The unique key of the satellite of which impulsive maneuver is added to
	xa_vp: Impulsive maneuver using VP-card array format - see XA_VP_? for array arrangement
Return Value:
	0 if the impulsive maneuver is added successfully, non-0 if there is an error.
=======================================================================================



